<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Market place valet" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Market place valet" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1549450340000</longProp>
        <longProp name="ThreadGroup.end_time">1549450340000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery"></stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">test</stringProp>
          <stringProp name="dbUrl">jdbc:mysql://marketplace-dqs.cjijkpjt8in1.us-east-1.rds.amazonaws.com/marketplace_qa</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <stringProp name="initQuery"></stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">l1gN8oQP701J4Wl8</stringProp>
          <stringProp name="poolMax">0</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">market-rw</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">Bearer ${token}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">marketplace-qa.kiwi-internal.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path"></stringProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </ConfigTestElement>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:\Users\KiwiTech\Desktop\users.txt</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">user</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request" enabled="true">
          <stringProp name="dataSource">test</stringProp>
          <stringProp name="query">SELECT * FROM `email_verification_token`;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Users" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;first_name&quot;: &quot;Apoorv&quot;,&#xd;
  &quot;last_name&quot;: &quot;test&quot;,&#xd;
  &quot;email&quot;: &quot;apoorvtest@yopmail.com&quot;,&#xd;
  &quot;password&quot;: &quot;Password@123&quot;,&#xd;
  &quot;company_name&quot;: &quot;Apoorv&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;email&quot;: &quot;apoorvtest@yopmail.com&quot;,&#xd;
  &quot;password&quot;: &quot;Password@123&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">token_not_found</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">id</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">id_not_found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="false">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="110541305">token</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">2</intProp>
              <stringProp name="Assertion.custom_message"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User details" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/user</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update user" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;first_name&quot;: &quot;Apoo&quot;,&#xd;
  &quot;last_name&quot;: &quot;kiwi&quot;,&#xd;
  &quot;company_name&quot;: &quot;apookiwi&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/user</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Password" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;current&quot;: &quot;Password@321&quot;,&#xd;
  &quot;password&quot;: &quot;Password@123&quot;,&#xd;
  &quot;password_confirmation&quot;: &quot;Password@123&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/password</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add a new user" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;first_name&quot;: &quot;Somya&quot;,&#xd;
  &quot;last_name&quot;: &quot;kiwi&quot;,&#xd;
  &quot;email&quot;: &quot;somyakiwi@yopmail.com&quot;,&#xd;
  &quot;password&quot;: &quot;Password@123&quot;,&#xd;
  &quot;company_name&quot;: &quot;apookiwi&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User can Upload company logo" enabled="true">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="D:\Projects\Market place valet\image004.png" elementType="HTTPFileArg">
                  <stringProp name="File.path">D:\Projects\Market place valet\image004.png</stringProp>
                  <stringProp name="File.paramname">logo</stringProp>
                  <stringProp name="File.mimetype">.png</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/company/logo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Superadmin Permission" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;key&quot;: &quot;edit&quot;,&#xd;
  &quot;value&quot;: true&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/superadmin/permisson</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Forgot password" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;email&quot;: &quot;richakiwi@yopmail.com&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/forgot/password</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="logout" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/user/logout</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Roles" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Invite Company User" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;email&quot;: &quot;harshkiwi1@yopmail.com&quot;,&#xd;
  &quot;permissions&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;view_gallery&quot;,&#xd;
      &quot;value&quot;: true&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/user/invite</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname=" User will register with this api" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;full_name&quot;: &quot;harshkiwi@yopmail.com&quot;,&#xd;
  &quot;password&quot;: &quot;Password@123&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/register/invited/user/4726c15159cf5bcc64468d364da3cbce050a481590f3d1ceba588f7f0d2a</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Company User List" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/company/users</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Module Permission List" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/module/permissions</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update user permission" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;key&quot;: &quot;view_gallery&quot;,&#xd;
  &quot;value&quot;: true&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/user/permission/24</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Remove company user" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/company/user/22</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Convert user to company admin" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;user_id&quot;: 95&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/company/users/roles/admin</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Marketplace" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Manufacturer List" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/manufacturer</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Connect to marketplace" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;mp_url&quot;: &quot;richaa1.myshopify.com&quot;,&#xd;
  &quot;mp_type&quot;: &quot;shopify&quot;,&#xd;
  &quot;edit_reflect_status&quot;: &quot;0&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/marketplace/connect</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Disconnect to marketplace" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;mp_type&quot;: &quot;shopify&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/marketplace/disconnect</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Move marketplace products to 3p360" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;products&quot;: [&#xd;
    {&#xd;
      &quot;product_id&quot;: 1,&#xd;
      &quot;variant_id&quot;: &quot;1&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;is_sku_upc_auto_genrate&quot;: &quot;1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/marketplace/products</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check Integrated marketPlace" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;mp_type&quot;: &quot;shopify&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/marketplace/check</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="List marketplace" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/marketplace?</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="List all connected marketplace shop of company" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/marketplace/connected</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update edit reflection status of connected marketplace" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;edit_reflect_status&quot;: &quot;1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/marketplace/connected/38/editReflection</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check any marketplace connected with logged in company or not." enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/marketplace/connected/anyMarketplace</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Gallery" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="List of image, video and pdf" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/gallery/media?page=1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User can Upload media file" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hash_name&quot;: &quot;c5ddf0bbf712e8b63816d2a3deff9418.jpg&quot;, &#xd;
  &quot;media_name&quot;: &quot;images.jpg&quot;, &#xd;
  &quot;size&quot;: 6533.0,&#xd;
  &quot;resolution&quot;: &quot;835 x 277&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/gallery/media</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="View image, video and pdf detail" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v1/gallery/media/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update image, video and pdf label" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;child&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/gallery/media/206</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete image, video and pdf" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/gallery/media/206</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Lamda" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;path&quot; : &quot;media&quot;,&#xd;
	&quot;media_name&quot; : &quot;images.jpg&quot;,&#xd;
	&quot;img_name&quot;: &quot;&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://c9zqs7vgg2.execute-api.us-east-1.amazonaws.com/qa/upload-media-on-s3</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Product" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="List products" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Product and varient" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;product_name&quot;: &quot;MicroMax 81 cm&quot;,&#xd;
  &quot;variant_name&quot;: &quot;HD&quot;,&#xd;
  &quot;sku&quot;: &quot;SKUMICROMAX45122&quot;,&#xd;
  &quot;upc_ean&quot;: &quot;ljlj45&quot;,&#xd;
  &quot;category_id&quot;: 2,&#xd;
  &quot;product_code&quot;: &quot;Global001&quot;,&#xd;
  &quot;brand&quot;: &quot;Sony Corporation&quot;,&#xd;
  &quot;manufacturer&quot;: &quot;Cloudtail Brooklyn&quot;,&#xd;
  &quot;product_line&quot;: &quot;Smart TV&quot;,&#xd;
  &quot;product_style&quot;: &quot;Patchwall based TV&quot;,&#xd;
  &quot;color&quot;: &quot;blue&quot;,&#xd;
  &quot;size&quot;: &quot;medium&quot;,&#xd;
  &quot;product_link&quot;: &quot;https://www.amazon.com/gp/product/B07GDG&quot;,&#xd;
  &quot;selling_price&quot;: &quot;10&quot;,&#xd;
  &quot;msrp&quot;: &quot;11.50&quot;,&#xd;
  &quot;cost&quot;: &quot;29.65&quot;,&#xd;
  &quot;wholesale&quot;: &quot;10.5&quot;,&#xd;
  &quot;map&quot;: &quot;12&quot;,&#xd;
  &quot;long_title&quot;: &quot;Variant Long title.&quot;,&#xd;
  &quot;medium_title&quot;: &quot;Variant medium title.&quot;,&#xd;
  &quot;short_title&quot;: &quot;Variant shor title.&quot;,&#xd;
  &quot;long_description&quot;: &quot;Variant long description.&quot;,&#xd;
  &quot;medium_description&quot;: &quot;Variant medium description.&quot;,&#xd;
  &quot;short_description&quot;: &quot;Variant short description.&quot;,&#xd;
  &quot;html_description&quot;: &quot;Variant HTML description&quot;,&#xd;
  &quot;feature_1&quot;: &quot;Variant Feature 1&quot;,&#xd;
  &quot;feature_2&quot;: &quot;Variant Feature 2&quot;,&#xd;
  &quot;feature_3&quot;: &quot;Variant Feature 3&quot;,&#xd;
  &quot;feature_4&quot;: &quot;Variant Feature 4&quot;,&#xd;
  &quot;feature_5&quot;: &quot;Variant Feature 5&quot;,&#xd;
  &quot;feature_6&quot;: &quot;Variant Feature 6&quot;,&#xd;
  &quot;keywords&quot;: &quot;Variant keyword1, Variant keyword2, Variant keyword3, Variant keyword4, Variant keyword5, Variant keyword6&quot;,&#xd;
  &quot;material&quot;: &quot;Variant material&quot;,&#xd;
  &quot;warnings&quot;: &quot;Variant warnings&quot;,&#xd;
  &quot;additional_comments&quot;: &quot;Variant additional comments&quot;,&#xd;
  &quot;weight_lbs&quot;: &quot;45&quot;,&#xd;
  &quot;height_inches&quot;: &quot;10.32&quot;,&#xd;
  &quot;width_inches&quot;: &quot;45.3&quot;,&#xd;
  &quot;length_inches&quot;: 52.3,&#xd;
  &quot;origin_country_id&quot;: 1,&#xd;
  &quot;hts_code&quot;: &quot;121541&quot;,&#xd;
  &quot;package_weight_lbs&quot;: &quot;12&quot;,&#xd;
  &quot;package_height_inches&quot;: &quot;45&quot;,&#xd;
  &quot;package_width_inches&quot;: &quot;34545&quot;,&#xd;
  &quot;package_length_inches&quot;: &quot;125.25&quot;,&#xd;
  &quot;master_case_quantity&quot;: 45,&#xd;
  &quot;master_case_weight_lbs&quot;: &quot;12&quot;,&#xd;
  &quot;master_case_height_inches&quot;: &quot;54.32&quot;,&#xd;
  &quot;master_case_width_inches&quot;: &quot;124.2&quot;,&#xd;
  &quot;master_case_length_inches&quot;: &quot;35.65&quot;,&#xd;
  &quot;inner_case_quantity&quot;: 56,&#xd;
  &quot;inner_case_weight_lbs&quot;: &quot;540.21&quot;,&#xd;
  &quot;inner_case_height_inches&quot;: &quot;452.32&quot;,&#xd;
  &quot;inner_case_width_inches&quot;: &quot;142.32&quot;,&#xd;
  &quot;inner_case_length_inches&quot;: &quot;42.32&quot;,&#xd;
  &quot;amazon_link&quot;: &quot;https://www.amazon.com/Steve-Madden-Mens-Jagwar-10-5/dp/B016X44MKA&quot;,&#xd;
  &quot;ebay_link&quot;: &quot;https://www.ebay.com/itm/AlpineSwiss-Sedona-Toiletry-Bag-Genuine-Leather-Shaving-Kit-Dopp-Kit-Travel-Case/311984839058&quot;,&#xd;
  &quot;walmart_link&quot;: &quot;https://www.walmart.com/ip/Weslo-Cadence-G-5-9i-Folding-Treadmill/45799822&quot;,&#xd;
  &quot;jet_link&quot;: &quot;https://jet.com/product/Bandelier-Arm-Chair/5ac4bef2a86647adafa9c12b13ce6d8d?experienceId=25&quot;,&#xd;
  &quot;overstock_link&quot;: &quot;https://www.overstock.com/Bedding-Bath/Becky-Cameron-Luxury-Ultra-Soft-Bed-Sheet-Set/9273417/product.html?recset=bda04df2-0842-4c56-91ad-1163e45d5c86&amp;refccid=2KTPDSFF5EBZDEKMOCIXN4G5JM&amp;recalg=881,802&amp;recidx=2&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Product Details" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/40</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete all variants of product." enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/15</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Genrate Product Code" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/productCode</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="List all variants of a product" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/1/variants?is_default_variant=14</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Variant details" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/11/variants/jhjhjkjkj</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete variant by variant id" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/5/variants/8</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change the status of variant." enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/48/variants/77/status</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change the status of multiple variants." enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: &quot;DISCONTINUE&quot;,&#xd;
  &quot;variant_ids&quot;: [&#xd;
    202&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/123/variants/status</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Product&apos;s Variant media list" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/11/variants/13/media</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Variant Media" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;media_ids&quot;: [&#xd;
    192&#xd;
  ],&#xd;
  &quot;type&quot;: &quot;thumbnail&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/1/variants/1/media</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Product&apos;s Variant media details" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/11/variants/14/media/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Brand List" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/brands</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Remove Variant Media" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/1/variants/1/media/191</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Variant by Media id" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/media/34/variants</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Import" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Import Product via CSV" enabled="false">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="C:\Users\KiwiTech\Desktop\Untitled 2.csv" elementType="HTTPFileArg">
                  <stringProp name="File.path">C:\Users\KiwiTech\Desktop\Untitled 2.csv</stringProp>
                  <stringProp name="File.paramname">importFile</stringProp>
                  <stringProp name="File.mimetype">text/csv</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/products/import</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Export" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="List template" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/export/template</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create new template" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;1&quot;,&#xd;
  &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
  &quot;data&quot;: [&#xd;
    {&#xd;
      &quot;category&quot;: &quot;General&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;product_name&quot;,&#xd;
          &quot;label&quot;: &quot;Product Name&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;sku&quot;,&#xd;
          &quot;label&quot;: &quot;SKU&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;upc_ean&quot;,&#xd;
          &quot;label&quot;: &quot;UPC/EAN&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;category&quot;,&#xd;
          &quot;label&quot;: &quot;Category&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;product_link&quot;,&#xd;
          &quot;label&quot;: &quot;Product Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;brand&quot;,&#xd;
          &quot;label&quot;: &quot;Brand&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;line&quot;,&#xd;
          &quot;label&quot;: &quot;Product Line&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;manufacturer&quot;,&#xd;
          &quot;label&quot;: &quot;Manufacturer&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;status&quot;,&#xd;
          &quot;label&quot;: &quot;Product Status&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;color&quot;,&#xd;
          &quot;label&quot;: &quot;color&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;size&quot;,&#xd;
          &quot;label&quot;: &quot;Size&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Pricing&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;selling_price&quot;,&#xd;
          &quot;label&quot;: &quot;Selling Price&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;wholesale&quot;,&#xd;
          &quot;label&quot;: &quot;Wholesale&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;cost&quot;,&#xd;
          &quot;label&quot;: &quot;Cost&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;msrp&quot;,&#xd;
          &quot;label&quot;: &quot;MSRP&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;map&quot;,&#xd;
          &quot;label&quot;: &quot;MAP&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Market Place Link&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;amazon_link&quot;,&#xd;
          &quot;label&quot;: &quot;Amazon Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ebay_link&quot;,&#xd;
          &quot;label&quot;: &quot;Ebay Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;walmart_link&quot;,&#xd;
          &quot;label&quot;: &quot;Walmart Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;jet_link&quot;,&#xd;
          &quot;label&quot;: &quot;Jet Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;overstock_link&quot;,&#xd;
          &quot;label&quot;: &quot;Overstock Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Content&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;long_title&quot;,&#xd;
          &quot;label&quot;: &quot;Long Title&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;medium_title&quot;,&#xd;
          &quot;label&quot;: &quot;Medium Title&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;short_title&quot;,&#xd;
          &quot;label&quot;: &quot;Short Title&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;long_description&quot;,&#xd;
          &quot;label&quot;: &quot;Long Description&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;medium_description&quot;,&#xd;
          &quot;label&quot;: &quot;Medium Description&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;short_description&quot;,&#xd;
          &quot;label&quot;: &quot;Short Description&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;html_description&quot;,&#xd;
          &quot;label&quot;: &quot;HTML Description&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_1&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_1&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_2&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 2&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_3&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 3&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_4&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 5&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_6&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 6&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;keywords&quot;,&#xd;
          &quot;label&quot;: &quot;Keywords&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;material&quot;,&#xd;
          &quot;label&quot;: &quot;Material&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;certifications&quot;,&#xd;
          &quot;label&quot;: &quot;Certifications&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;warnings&quot;,&#xd;
          &quot;label&quot;: &quot;Warnings&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Digital Assets&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;main_image&quot;,&#xd;
          &quot;label&quot;: &quot;Main Image&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_1&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_2&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 2&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_3&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 3&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_4&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 4&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_5&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 5&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_6&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 6&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_1&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_2&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 2&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_3&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 3&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_4&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 4&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_5&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 5&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;collection_image&quot;,&#xd;
          &quot;label&quot;: &quot;Collection Image&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;product_video_1&quot;,&#xd;
          &quot;label&quot;: &quot;Product Video 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;product_video_2&quot;,&#xd;
          &quot;label&quot;: &quot;Product Video 2&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;thumbnail_image&quot;,&#xd;
          &quot;label&quot;: &quot;Thumbnail Image&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Case Pack Detail&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_quantity&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Quantity&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_weight_lbs&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Weight&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_height_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Height&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_width_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Width&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_length_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Length&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_quantity&quot;,&#xd;
          &quot;label&quot;: &quot;Inner Case Quantity&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_weight_lbs&quot;,&#xd;
          &quot;label&quot;: &quot;Inner case Weight&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_height_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Inner Case Height&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_width_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Inner Case Width&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_length_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Inner Case Length&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Product Detail&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;weight_lbs&quot;,&#xd;
          &quot;label&quot;: &quot;Product Weight&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;height_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Product Height&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;width_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Product Width&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;length_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Product Length&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;country_of_origin&quot;,&#xd;
          &quot;label&quot;: &quot;Country of Origin&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;hts_code&quot;,&#xd;
          &quot;label&quot;: &quot;HTS Code&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Package Detail&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;package_weight_lbs&quot;,&#xd;
          &quot;label&quot;: &quot;Package Weight&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;package_height_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Package Height&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;package_width_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Package Width&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;package_length_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Package Length&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/export/template</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Template detail" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/export/template/1</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update template" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;Demo&quot;,  &#xd;
  &quot;data&quot;: [&#xd;
    {&#xd;
      &quot;category&quot;: &quot;General&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;product_name&quot;,&#xd;
          &quot;label&quot;: &quot;Product Name&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;sku&quot;,&#xd;
          &quot;label&quot;: &quot;SKU&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;upc_ean&quot;,&#xd;
          &quot;label&quot;: &quot;UPC/EAN&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;category&quot;,&#xd;
          &quot;label&quot;: &quot;Category&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;product_link&quot;,&#xd;
          &quot;label&quot;: &quot;Product Link&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;brand&quot;,&#xd;
          &quot;label&quot;: &quot;Brand&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;line&quot;,&#xd;
          &quot;label&quot;: &quot;Product Line&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;manufacturer&quot;,&#xd;
          &quot;label&quot;: &quot;Manufacturer&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;status&quot;,&#xd;
          &quot;label&quot;: &quot;Product Status&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;color&quot;,&#xd;
          &quot;label&quot;: &quot;color&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;size&quot;,&#xd;
          &quot;label&quot;: &quot;Size&quot;,&#xd;
          &quot;status&quot;: false&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Pricing&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;selling_price&quot;,&#xd;
          &quot;label&quot;: &quot;Selling Price&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;wholesale&quot;,&#xd;
          &quot;label&quot;: &quot;Wholesale&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;cost&quot;,&#xd;
          &quot;label&quot;: &quot;Cost&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;msrp&quot;,&#xd;
          &quot;label&quot;: &quot;MSRP&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;map&quot;,&#xd;
          &quot;label&quot;: &quot;MAP&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Market Place Link&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;amazon_link&quot;,&#xd;
          &quot;label&quot;: &quot;Amazon Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;ebay_link&quot;,&#xd;
          &quot;label&quot;: &quot;Ebay Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;walmart_link&quot;,&#xd;
          &quot;label&quot;: &quot;Walmart Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;jet_link&quot;,&#xd;
          &quot;label&quot;: &quot;Jet Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;overstock_link&quot;,&#xd;
          &quot;label&quot;: &quot;Overstock Link&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Content&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;long_title&quot;,&#xd;
          &quot;label&quot;: &quot;Long Title&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;medium_title&quot;,&#xd;
          &quot;label&quot;: &quot;Medium Title&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;short_title&quot;,&#xd;
          &quot;label&quot;: &quot;Short Title&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;long_description&quot;,&#xd;
          &quot;label&quot;: &quot;Long Description&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;medium_description&quot;,&#xd;
          &quot;label&quot;: &quot;Medium Description&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;short_description&quot;,&#xd;
          &quot;label&quot;: &quot;Short Description&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;html_description&quot;,&#xd;
          &quot;label&quot;: &quot;HTML Description&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_1&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_1&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_2&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 2&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_3&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 3&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_4&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 5&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;feature_6&quot;,&#xd;
          &quot;label&quot;: &quot;Feature 6&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;keywords&quot;,&#xd;
          &quot;label&quot;: &quot;Keywords&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;material&quot;,&#xd;
          &quot;label&quot;: &quot;Material&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;certifications&quot;,&#xd;
          &quot;label&quot;: &quot;Certifications&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;warnings&quot;,&#xd;
          &quot;label&quot;: &quot;Warnings&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Digital Assets&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;main_image&quot;,&#xd;
          &quot;label&quot;: &quot;Main Image&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_1&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_2&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 2&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_3&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 3&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_4&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 4&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_5&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 5&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;additional_image_6&quot;,&#xd;
          &quot;label&quot;: &quot;Additional Image 6&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_1&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_2&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 2&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_3&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 3&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_4&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 4&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;lifestyle_image_5&quot;,&#xd;
          &quot;label&quot;: &quot;Lifestyle Image 5&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;collection_image&quot;,&#xd;
          &quot;label&quot;: &quot;Collection Image&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;product_video_1&quot;,&#xd;
          &quot;label&quot;: &quot;Product Video 1&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;product_video_2&quot;,&#xd;
          &quot;label&quot;: &quot;Product Video 2&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;thumbnail_image&quot;,&#xd;
          &quot;label&quot;: &quot;Thumbnail Image&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Case Pack Detail&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_quantity&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Quantity&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_weight_lbs&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Weight&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_height_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Height&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_width_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Width&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;master_case_length_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Master Case Length&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_quantity&quot;,&#xd;
          &quot;label&quot;: &quot;Inner Case Quantity&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_weight_lbs&quot;,&#xd;
          &quot;label&quot;: &quot;Inner case Weight&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_height_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Inner Case Height&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_width_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Inner Case Width&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;inner_case_length_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Inner Case Length&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Product Detail&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;weight_lbs&quot;,&#xd;
          &quot;label&quot;: &quot;Product Weight&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;height_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Product Height&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;width_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Product Width&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;length_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Product Length&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;country_of_origin&quot;,&#xd;
          &quot;label&quot;: &quot;Country of Origin&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;hts_code&quot;,&#xd;
          &quot;label&quot;: &quot;HTS Code&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;category&quot;: &quot;Package Detail&quot;,&#xd;
      &quot;values&quot;: [&#xd;
        {&#xd;
          &quot;key&quot;: &quot;package_weight_lbs&quot;,&#xd;
          &quot;label&quot;: &quot;Package Weight&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;package_height_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Package Height&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;package_width_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Package Width&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        },&#xd;
        {&#xd;
          &quot;key&quot;: &quot;package_length_inches&quot;,&#xd;
          &quot;label&quot;: &quot;Package Length&quot;,&#xd;
          &quot;status&quot;: true&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  ]&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/export/template/1</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete export template" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/export/template/22</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Default template" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://marketplace-qa.kiwi-internal.com/api/v1/default-export-template.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Export Variant" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;variant_ids&quot;: [&#xd;
    123&#xd;
  ],&#xd;
  &quot;template_id&quot;: &quot;1&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/export</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="CSV" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="csv activity list" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/csvActivity</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Download csv data" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/csvDownload/243</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete csv activity" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/csvActivity/106</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SuperAdmin Clients  " enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Client Lists(search and orderby)" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/clients?search=rashi.awasthi+10@kiwitech.com</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="This api set company id for superadmin to access company data" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/client/21</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete company" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/client/56</stringProp>
            <stringProp name="HTTPSampler.method">DELETE</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update skus" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;skus&quot;: 150&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/client/4/sku</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Change Status of company (Status value should be 1 (Active) and 2 (Inactive))" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;status&quot;: 1&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/client/1/status</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Super admin can get company&apos;s admin profile data after mimic to the company" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/client/72/admin/profile</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update company admin profile after mimic to the client if super admin has edit rights for mimic company." enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;first_name&quot;: &quot;mark&quot;,&#xd;
  &quot;last_name&quot;: &quot;ki&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/client/72/admin/profile</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Upload company logo by super admin after mimic." enabled="false">
            <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
              <collectionProp name="HTTPFileArgs.files">
                <elementProp name="logo.jpg" elementType="HTTPFileArg">
                  <stringProp name="File.path">logo.jpg</stringProp>
                  <stringProp name="File.paramname">logo</stringProp>
                  <stringProp name="File.mimetype">.jpg</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/client/72/logo</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Convert company user to company admin" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;user_id&quot;: 55&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/client/1/user/role/admin</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
